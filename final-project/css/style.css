/* Importing google fonts */
@import url("https://fonts.googleapis.com/css2?family=Fugaz+One&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap");

/* reset */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

img {
  /*
 - By default images are designed to be inline, hence properties like margin and padding do not affect it.
 - By explicitly setting the image to a block level element, it means that you are enabling properties like margin,padding and height to be applied to img tags
  */
  display: block;
  /* setting the image maximum width to a 100% of its parent container */
  max-width: 100%;
  /* setting height auto will automatically enable your image height to automatically respomg to the image width */
  height: auto;
}

input,
button,
textarea {
  /* This elements do not inherit font properties hence you need to explicitly define that when you want them to inherit */
  font: inherit;
}

/* css variables */
/* user root pseudo class to define the css variables */
:root {
  /* ---font variables--- */
  --font-family: "Nunito", sans-serif;
  --font-family-headings: "Fugaz One", cursive;
  /* clamp prevents us from adding many minoe media queries7u */
  --font-size: clamp(1rem, 2.2vh, 1.5rem);
  /* minimum font-size is 1rem,Ideal >> 2.2vh and maximum >> 1.5rem*/

  /* ---color variables---*/
  --background-color: orange;
  --background-color-fade: rgb(252, 220, 160);
  /* Default behaviour is from top to bottom */
  --background-image: linear-gradient(
    (var(--background-color), var(--background-color-fade))
  );
  --body-background-color: #fff;
  --font-color: #000;
  --border-color: #333;
  --highlight-color: rgb(51, 178, 51);
  --link-color: #000;
  /* black color with 60% visibilty */
  --link-hover: hsla(0, 0%, 0%, 0.6);
  --link-active: orange;

  /* border variables */
  --border: 1px solid var(--border-color);
}

/* ---utility classes--- */
.offscreen {
  /* offscreen class is used for elements you do not want on the screen but want them picked by a screen reader */
  position: absolute;
  left: -10000px;
}

.nowrap {
  /* used to prevent text wrapping in awkward places */
  white-space: nowrap;
}

.center {
  /* class used to align text at the center, whether a paragraph or even a heading */
  text-align: center;
}

/* general styles */
html {
  scroll-behavior: smooth;
  font-size: var(--font-size);
  font-family: var(--font-family);
  /* setting the fallback for background image as a certain background color */
  background-color: var(--background-color);
  background-image: var(--background-image);
}

body {
  /* The background color for the whole page is white, but when we adjust the width of the body element then it is when we are able to see the html background-color*/
  background-color: var(--body-background-color);
  color: var(--font-color);
  /* minimum height of the body element is 100viewport height units */
  min-height: 100vh;
  max-width: 800px;
  /* 0 margin to the top and bottom, auto margin for left and right */
  margin: 0 auto;
  /* setting borders for the body element */
  border-left: var(--border);
  border-right: var(--border);
  box-shadow: 0 0 10px var(--border-color);
  /* 
  box-shadow: [horizontal offset] [vertical offset] [blur radius] [spread radius] [color];
  
    - horizontal offset
        >> Position of the shadow horizontally
            >> positive values move the shadow to the right and negative values move the shadow to the left.
    - vertical offset
        >> Position of the shadow vertically
            >> Positive values move the shadow down and the negative values move it up.

    - blur-radius >> Happens at the edge of the shadow
        >> The blur effect of the shadow.
        - The higher the value the more the shadow.
    
    - spread-radius
        >> Size of the shadow
        positive values expand the shadow, negative values shrink the shadow.

    - color
        >> optional.
        Color of the shadow. If not specified the shadow will use the color of the element's text
  */
}

h1,
h2,
h3 {
  font-family: var(--font-family-headings);
  /* by setting letter spacing with an em unit we are basically making it reative to the font sized used */
  letter-spacing: 0.1em;
}

h2,
h3 {
  margin-bottom: 1em;
  color: var(--highlight-color);
}

p {
  line-height: 1.5;
}

/* represents both visited and unvisited */
a:any-link {
  color: var(--link-color);
}

/* focus-visible is more specific than focus in that focus-visible will help in distinguishing keyboard and mouse interactions hence improivng accessibility by showing focus outlines only when they are needed by users navigating with a keyboard */
a:hover,
a:focus-visible {
  color: var(--link-hover);
}

a:active {
  color: var(--link-active);
}
